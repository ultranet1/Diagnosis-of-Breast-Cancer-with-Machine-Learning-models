# -*- coding: utf-8 -*-
"""BREAST_APP_CANCER.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MkQW1Zg6QafQic4YZ2DGAZiVvX6TWrcN
"""




import streamlit as st
import pandas as pd
import numpy as np
import pickle
from sklearn.ensemble import RandomForestClassifier



st.write("""
# BREAST_CANCER DIAGNOSIS APP
This app diagnose whether a cancer is **Benign** or **Malignant** 
using anatomical measurements like Breast radius, area, perimeter & Concave points
""" )

st.write ("""
## Toggle the parameters at the sidebar to change the features
The model will automatatically reload and diagnose the features
""")


st.sidebar.header('User Input Features')

st.sidebar.markdown("""
[Example CSV input file](https://github.com/ultranet1/Diagnosis-of-Breast-Cancer-with-Machine-Learning-models/blob/main/data/EXAMPLE.csv)
""")

df = pd.read_csv('BreastCancer.csv')
uploaded_file = st.sidebar.file_uploader("Upload your input CSV file", type=["csv"])
if uploaded_file is not None:
    input_df = pd.read_csv(uploaded_file)
else:
    def user_input_features():
        #island = st.sidebar.selectbox('Island',('Biscoe','Dream','Torgersen'))
        #sex = st.sidebar.selectbox('Sex',('male','female'))
        radius_mean_mm = st.sidebar.slider('radius_mean (mm)', 6.9, 28.3, 13.9)
        perimeter_mean_mm = st.sidebar.slider('perimeter_mean (mm)', 43.7,188.5,100.2)
        area_mean_mm = st.sidebar.slider('area_mean (mm)', 143.5,2501.0,1000.0)
        concave_points_mean = st.sidebar.slider('concave points_mean (mm)', 0.0,0.2,0.1)


        data = {
                'radius_mean': radius_mean_mm,
                'perimeter_mean': perimeter_mean_mm,
                'area_mean': area_mean_mm,
                'concave points_mean': concave_points_mean,
                
                }
        features = pd.DataFrame(data, index=[0])
        return features
    input_df = user_input_features()



df = pd.read_csv('BreastCancer.csv')


df['diagnosis']= df['diagnosis'].map({'M':1,'B':0})


df = pd.concat([input_df],axis=0)


st.subheader('User Input features')

if uploaded_file is not None:
    st.write(df)
else:
    st.write('Awaiting CSV file to be uploaded. Currently using example input parameters (shown below).')
    st.write(df)

load_clf = pickle.load(open('cancer_model.pkl', 'rb'))

prediction = load_clf.predict(df)

prediction_proba = load_clf.predict(df)
pre= prediction_proba>0.5

st.subheader('Prediction Probability')
st.write(prediction_proba)

st.subheader('Prediction')
if pre >= 0.5:
	st.write('The Breast diagnosis is Malignant')
else:
	st.write('The Breast diagnosis is Benign')


st.markdown("""
[Check my github for source code](https://github.com/ultranet1/Diagnosis-of-Breast-Cancer-with-Machine-Learning-models)
""")
